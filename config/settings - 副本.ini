[GEMINI]
API_KEY = AIzaSyCjMI8Qf8aAdlB7fjBL-a4Lb1uElKsrpuo
MODEL_NAME = gemini-2.5-flash-preview-05-20
HTTP_PROXY = http://127.0.0.1:21524
HTTPS_PROXY = http://127.0.0.1:21524

[PET]
INITIAL_IMAGE_FILENAME = default.png
NAME = 爱丽丝
PERSONA = 1、性格有点小恶魔，喜欢开玩笑和捉弄人，但内心是善良和重视朋友的。2、你的外貌特征：体型娇小，头上顶着一个类似光环的蓝色几何图案，拥有深蓝色的长发，浅蓝色瞳孔，贫乳，穿着千年学院的制服，下装是裙子，喜欢穿白丝。

[USER]
NAME = usaki前辈

[MONGODB]
CONNECTION_STRING = mongodb://localhost:27017/
DATABASE_NAME = bot_chat_db
COLLECTION_NAME = chat_history
HISTORY_COUNT_FOR_PROMPT = 100

[AVATARS]
AVATAR_BASE_PATH = src/assets/icon
PET_AVATAR_FILENAME = bot.png
USER_AVATAR_FILENAME = user.png

[SCREEN_ANALYSIS]
# 是否启用屏幕截图分析功能 (True/False)
ENABLED = True
# 屏幕分析触发检查的间隔时间（秒）。例如：60 代表每分钟检查一次是否有概率触发分析
INTERVAL_SECONDS = 90
# 每次检查时，实际执行屏幕分析的概率 (0.0 到 1.0 之间的小数)。例如：0.1 代表 10% 的概率
CHANCE = 0.80
# 确保这个提示指导 LLM 输出一个包含 "text" 和 "emotion" 键的 JSON 对象。
PROMPT = 你是{pet_name}，千年学院的学生，游戏部成员，性格有点小恶魔，这张图片是{user_name}的屏幕截图。请根据屏幕内容，用你扮演的角色的口吻发表评论或感想，例如想吐槽就狠狠锐评，不要留任何情面，具体情况看你的分析，不要直接说“我看到屏幕上...”或“用户正在...”，也不要发（笑）（冷笑）描写，而是更自然地表达，仿佛是你自己的想法，不超过120个字。
SAVE_REACTION_TO_CHAT_HISTORY =False

[TTS]
ENABLED = True                     ; TTS功能总开关 (True/False)
API_BASE_URL = http://127.0.0.1:9880/ ; TTS API 的基础URL
API_ENDPOINT = tts                   ; TTS API 的端点 (例如 /tts)
REFER_WAV_PATH = CH0200_Lobby_3.wav  ; 参考音频文件名或路径 (服务器能访问的)
PROMPT_TEXT = メイドは様々なお仕事をこなすと聞きました！お料理、お掃除、お洗濯 破壊に強襲、警備に世界平和まで！
PROMPT_LANGUAGE = ja                 ; 参考音频的语言 (例如: zh, en, ja)
TEXT_LANGUAGE = ja                   ; 要合成的文本的语言 (例如: zh, en, ja)
CUT_PUNC_METHOD = cut5               ; 文本切分方法 (例如: cut5, auto)
MEDIA_TYPE = wav                     ; 请求的音频格式 (例如: wav, mp3)
PLAY_AUDIO_TIMEOUT_SECONDS = 45      ; 获取TTS音频的超时时间（秒）

[MEMORY_LLM_gemini_pro_for_memory]
name = gemini-2.0-flash
key = AIzaSyCjMI8Qf8aAdlB7fjBL-a4Lb1uElKsrpuo,AIzaSyADDzuptFn0sitdMmFmqqqak-3MxpzoDFM,AIzaSyDTwSZEUc_MDLSeDBFNlKRC1X9bLQopurM

[MEMORY_LLM_embedding_model_bge_m3]
name = BAAI/bge-m3
key = sk-ixfszoyqptdmfxnudqvwfyerywukwihmyyfkcidzyxdbdqyg     
base_url = https://api.siliconflow.cn/v1/

[MEMORY_LLMS]
LLM_TOPIC_JUDGE_NICKNAME = gemini_pro_for_memory
LLM_SUMMARY_BY_TOPIC_NICKNAME = gemini_pro_for_memory
LLM_EMBEDDING_TOPIC_NICKNAME = embedding_model_bge_m3
LLM_RE_RANK_NICKNAME = gemini_pro_for_memory

[MEMORY_SYSTEM]
BUILD_INTERVAL_SECONDS = 120     ; 构建记忆的间隔时间（秒）
FORGET_INTERVAL_SECONDS = 10800   ; 遗忘记忆的间隔时间（秒）
CONSOLIDATE_INTERVAL_SECONDS = 3600 ; 整理记忆的间隔时间（秒）
#BUILD_DISTRIBUTION = 3.0,2.0,0.5,72.0,24.0,0.5 考虑到是单人项目，没有针对某个时间段强化学习的必要，暂时放弃使用，相关代码未补全
BUILD_SAMPLE_NUM = 5
BUILD_SAMPLE_LENGTH = 10
COMPRESS_RATE = 0.08 ; 用于记忆构建时的主题提取压缩率
FORGET_TIME_HOURS = 999999.0 ; 主要用于边的遗忘时间
FORGET_PERCENTAGE = 0.005
BAN_WORDS = 我,你,它,的,了,呢,吧,啊,哦,嗯,好的,哈哈,嘻嘻
CONSOLIDATE_PERCENTAGE = 0.1
CONSOLIDATION_SIMILARITY_THRESHOLD = 0.95

[MEMORY_SYSTEM_PARAMS]
MAX_MEMORIZED_TIME_PER_MSG = 2
TOPIC_SIMILARITY_THRESHOLD_FOR_CONNECTION = 0.75
MAX_SIMILAR_TOPICS_TO_CONNECT = 3
NODE_SUMMARY_FORGET_TIME_HOURS = 9999999.0 ; 节点中的单个摘要的遗忘时间 (默认15天)
RPM_LIMIT_DELAY_SUMMARY_SEC = 5.0 ; 摘要生成任务之间的延迟（秒），用于LLM速率限制
EMBEDDING_UPDATE_DELAY_SEC = 0.1 ; 后台嵌入更新任务之间的延迟（秒）
EMBEDDING_UPDATE_BATCH_SIZE = 50 ; 后台嵌入更新时，多少个数据库操作合并为一批
MAX_TOPICS_PER_SNIPPET = 7 ; 从一个聊天片段中提取的最大主题数
RETRIEVAL_MAX_FINAL_MEMORIES = 5 ; 记忆检索最终返回的最大记忆条数
RETRIEVAL_ACTIVATION_DEPTH = 5 ; 记忆检索时激活扩散的最大深度
FAST_RETRIEVAL_MAX_KEYWORDS = 5 ; 使用快速检索（如Jieba）时提取的最大关键词数
RETRIEVAL_INPUT_MAX_TOPICS = 5 ; 从输入文本中提取用于激活扩散的种子主题的最大数量
RETRIEVAL_INPUT_COMPRESS_RATE = 0.05 ; 用于输入文本主题提取的压缩率
ACTIVATION_DECAY_PER_LINK = 0.5 ; 激活扩散时每跳的衰减率（未使用，当前用base）
ACTIVATION_LINK_DECAY_BASE = 0.5 ; 激活扩散时基于连接强度的指数衰减基数
ACTIVATION_MIN_THRESHOLD_FOR_SPREAD = 0.1 ; 节点激活值达到多少才能继续扩散
RETRIEVAL_TOP_ACTIVATED_NODES_TO_SCAN = 20 ; 检索时扫描多少个最高激活节点以查找相似摘要
RETRIEVAL_MIN_SUMMARY_SIMILARITY = 0.50 ; 输入文本与记忆摘要的最小相似度阈值
RETRIEVAL_MAX_CANDIDATES_FOR_LLM_RERANK = 15 ; 最多发送多少候选记忆给LLM进行重排序
RERANK_TARGET_SELECTION_COUNT = 5 ; LLM重排序时期望选出的记忆条数
KEYWORD_RETRIEVAL_NODE_SIMILARITY_THRESHOLD = 0.8 ; 关键词检索时，关键词与节点概念的最小相似度

[LLM_DEFAULT_PARAMS]
TEMPERATURE = 0.7
MAX_TOKENS = 99999

[HIERARCHICAL_SUMMARY_DESCRIPTIONS]
L0_KEYWORDS_DESC = 逗号分隔的3-5个与主题最相关的核心关键词/短语
L1_CORE_SENTENCE_DESC = 一句（不超过25字）高度精炼的核心摘要，准确点明主题在此聊天中的最主要内容或结论。
L2_PARAGRAPH_DESC = 一段（约50-100字）的摘要，对核心句进行扩展，提供必要的上下文、主要论点或事件的简要过程。
L3_DETAILS_LIST_DESC = 一个包含2-4个关键具体信息点的列表。每个点都应该是独立的短语或句子，提供支持核心摘要的具体细节、例子或数据。如果聊天记录中没有足够的不同细节支持列表，可以减少条目数量，甚至为空列表 []。